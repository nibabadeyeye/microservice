<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xiao.custom.config.pojo.mapper.ClientApplicationMapper">
    <resultMap id="BaseResultMap" type="com.xiao.custom.config.pojo.entity.ClientApplication">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="application" property="application" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="profile" property="profile" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, application, create_time, update_time, status, profile
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from t_client_application
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_client_application
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.xiao.custom.config.pojo.entity.ClientApplication">
    insert into t_client_application (id, application, create_time, 
      update_time, status, profile
      )
    values (#{id,jdbcType=BIGINT}, #{application,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{profile,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.xiao.custom.config.pojo.entity.ClientApplication">
        insert into t_client_application
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="application != null">
                application,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="profile != null">
                profile,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="application != null">
                #{application,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
            <if test="profile != null">
                #{profile,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.xiao.custom.config.pojo.entity.ClientApplication">
        update t_client_application
        <set>
            <if test="application != null">
                application = #{application,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
            <if test="profile != null">
                profile = #{profile,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.xiao.custom.config.pojo.entity.ClientApplication">
    update t_client_application
    set application = #{application,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      profile = #{profile,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <!-- 标记应用已下线 -->
    <update id="updateStatus">
        update t_client_application set status = #{status},update_time = now() where application = #{application} and profile = #{profile}
    </update>
</mapper>